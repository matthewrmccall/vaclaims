{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/matthewmccall/Desktop/Projects/js/vaclaims/src/App.js\",\n    _s = $RefreshSig$();\n\n// vaclaims is a signup form for veterans disability compensation help\n// import React and use hooks to create objects\n// hooks let you use state without writing a class\nimport React, { useReducer, useState } from 'react';\nimport './App.css'; // reducer function that takes inputs state and event\n\nconst formReducer = (state, event) => {\n  // when the event.reset property is true\n  // reset the field values to empty strings\n  if (event.reset) {\n    return {\n      name: '',\n      email: '',\n      phone: '',\n      type: '',\n      'contact': false\n    };\n  }\n\n  return { ...state,\n    // pass an event object with properties name and value\n    [event.name]: event.value\n  };\n};\n\nfunction App() {\n  _s();\n\n  // variables formData and setFormData are assigned to:\n  // the hook useReducer called with the parameter formReducer\n  const [formData, setFormData] = useReducer(formReducer, {\n    name: '',\n    email: '',\n    phone: '',\n    type: '',\n    'contact': false\n  }); // variables submitting and setSubmitting are assigned to the result of:\n  // calling the useState hook with a parameter of false\n\n  const [submitting, setSubmitting] = useState(false); // function handleSubmit has parameter event\n\n  const handleSubmit = event => {\n    // run the event.preventDefault property in this function\n    event.preventDefault(); // set the setSubmitting variable to true\n\n    setSubmitting(true); // show Submitting Form message for 3 sec on button click\n\n    setTimeout(() => {\n      setSubmitting(false);\n      setFormData({\n        reset: true\n      });\n    }, 3000);\n  }; // function to pull the data from the event.target\n  // and pass the object to setFormData\n\n\n  const handleChange = event => {\n    // check if event.target.type is checkbox\n    const isCheckbox = event.target.type === 'checkbox'; // setFormData is an object with keys: name and value\n    // and values of event.target.name and event.target.value\n\n    setFormData({\n      name: event.target.name,\n      // if type is checkbox, pass event.target.checked as the value\n      // otherwise, pass event.target.value as value\n      value: isCheckbox ? event.target.checked : event.target.value\n    });\n  }; // the user-facing section\n  // update the onChange event handler to use the handleChange function\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Get help with your VA Claim\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Let's increase your VA rating\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), submitting && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"You are submitting the following:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(formData).map((name, value) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 28\n          }, this), \":\", value.toString()]\n        }, name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        disabled: submitting,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"name\",\n            onChange: handleChange,\n            value: formData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"email\",\n            onChange: handleChange,\n            value: formData.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Phone (recommended)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"phone\",\n            onChange: handleChange,\n            value: formData.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        disabled: submitting,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please choose an option:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"type\",\n            onChange: handleChange,\n            value: formData.type,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"VA Claim\",\n              children: \"VA Claim\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"VA Appeal\",\n              children: \"VA Appeal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Not sure\",\n              children: \"I'm not sure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Contact me about my VA Claim/Appeal.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"contact\",\n            onChange: handleChange,\n            checked: formData['contact']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: submitting,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Q7yP8jy/OjMtODgtpFjbzgcgdzY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/matthewmccall/Desktop/Projects/js/vaclaims/src/App.js"],"names":["React","useReducer","useState","formReducer","state","event","reset","name","email","phone","type","value","App","formData","setFormData","submitting","setSubmitting","handleSubmit","preventDefault","setTimeout","handleChange","isCheckbox","target","checked","Object","entries","map","toString"],"mappings":"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","sourcesContent":["// vaclaims is a signup form for veterans disability compensation help\n// import React and use hooks to create objects\n// hooks let you use state without writing a class\nimport React, { useReducer, useState } from 'react';\nimport './App.css';\n\n// reducer function that takes inputs state and event\nconst formReducer = (state, event) => {\n  // when the event.reset property is true\n  // reset the field values to empty strings\n  if(event.reset) {\n    return {\n      name: '',\n      email: '',\n      phone: '',\n      type: '',\n      'contact': false\n    }\n  }\n  return {\n    ...state,\n    // pass an event object with properties name and value\n    [event.name]: event.value\n  }\n}\n\nfunction App() {\n  // variables formData and setFormData are assigned to:\n  // the hook useReducer called with the parameter formReducer\n  const [formData, setFormData] = useReducer(formReducer, {\n    name: '',\n    email: '',\n    phone: '',\n    type: '',\n    'contact': false\n  });\n  // variables submitting and setSubmitting are assigned to the result of:\n  // calling the useState hook with a parameter of false\n  const [submitting, setSubmitting] = useState(false);\n  // function handleSubmit has parameter event\n  const handleSubmit = event => {\n  // run the event.preventDefault property in this function\n    event.preventDefault();\n  // set the setSubmitting variable to true\n    setSubmitting(true);\n  // show Submitting Form message for 3 sec on button click\n    setTimeout(() => {\n      setSubmitting(false);\n      setFormData({\n        reset: true\n      })\n    }, 3000)\n  }\n// function to pull the data from the event.target\n// and pass the object to setFormData\n  const handleChange = event => {\n    // check if event.target.type is checkbox\n    const isCheckbox = event.target.type === 'checkbox';\n    // setFormData is an object with keys: name and value\n    // and values of event.target.name and event.target.value\n    setFormData({\n      name: event.target.name,\n      // if type is checkbox, pass event.target.checked as the value\n      // otherwise, pass event.target.value as value\n      value: isCheckbox ? event.target.checked : event.target.value\n    });\n  }\n// the user-facing section\n// update the onChange event handler to use the handleChange function\n  return (\n    <div className=\"wrapper\">\n      <h1>Get help with your VA Claim</h1>\n      <h2>Let's increase your VA rating</h2>\n      {submitting &&\n      <div>\n        You are submitting the following:\n        <ul>\n          {Object.entries(formData).map((name, value) => (\n            <li key={name}><strong>{name}</strong>:{value.toString()}</li>\n          ))}\n          </ul>\n      </div>\n      }\n\n      <form onSubmit={handleSubmit}>\n      <fieldset disabled={submitting}>\n        <label>\n          <p>Name</p>\n          <input name=\"name\" onChange={handleChange} value={formData.name}/>\n          <p>Email</p>\n          <input name=\"email\" onChange={handleChange} value={formData.email}/>\n          <p>Phone (recommended)</p>\n          <input name=\"phone\" onChange={handleChange} value={formData.phone}/>\n        </label>\n      </fieldset>\n\n      <fieldset disabled={submitting}>\n        <label>\n          <p>Please choose an option:</p>\n          <select name=\"type\" onChange={handleChange} value={formData.type}>\n            <option value=\"VA Claim\">VA Claim</option>\n            <option value=\"VA Appeal\">VA Appeal</option>\n            <option value=\"Not sure\">I'm not sure</option>\n          </select>\n        </label>\n\n        <label>\n          <p>Contact me about my VA Claim/Appeal.</p>\n          <input type=\"checkbox\" name=\"contact\" onChange={handleChange} checked={formData['contact']} />\n        </label>\n      </fieldset>\n\n      <button type=\"submit\" disabled={submitting}>Submit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}